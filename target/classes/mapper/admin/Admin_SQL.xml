<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="adminSql">

	<!-- 로그인 --> <!-- 쿼리 수정 200203 -->
	<select id="adminLogin" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				ADMIN_ID, ADMIN_PW, ADMIN_NAME
			FROM
				ADMIN_ACCOUNT
			WHERE
				ADMIN_ID = #{ADMIN_ID}
		]]>
	</select>


	<!-- 회원 정보(불러오기) --> <!-- 일반회원 정보, 펫시터 정보, 펫 마릿수 -->
	<select id="adminMemList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre" /> 
			<![CDATA[
				SELECT
					NO, MIN(ID) ID, MIN(NAME) NAME, MIN(PHONE) PHONE, MIN(EMAIL) EMAIL, MIN(SEX) SEX, MIN(BIRTHDAY) BIRTHDAY, MIN(ADDRESS1) ADDRESS1,
					MIN(MEM_TYPE) MEM_TYPE, DECODE(COUNT(PET_MEM)||'마리', '0', '없음', COUNT(PET_MEM)||'마리') PET_COUNT
				FROM
					(
					SELECT
						NO, ID, NAME, PHONE, EMAIL, SEX, BIRTHDAY, ADDRESS1, MEM_TYPE, PET_MEM
					FROM
						(
						SELECT
							MEMBER.MEM_NO AS NO, MEMBER.MEM_ID AS ID, MEMBER.NAME AS NAME, MEMBER.PHONE AS PHONE, MEMBER.EMAIL AS EMAIL,
							MEMBER.SEX AS SEX, MEMBER.BIRTHDAY AS BIRTHDAY, MEMBER.ADDRESS1 AS ADDRESS1, MEMBER.MEMBER_DIVISION AS MEM_TYPE,
							PET_MEMBER.PET_MEM_NO AS PET_MEM
						FROM
							(
							SELECT
								MEM_NO, MEM_ID, NAME, PHONE, EMAIL, SEX, BIRTHDAY, ADDRESS1, MEMBER_DIVISION
							FROM
								MEMBER
							)
						MEMBER, PET_MEMBER
					WHERE 
						MEMBER.MEM_ID = PET_MEMBER.MEM_ID(+)
						)
      
					UNION ALL

					SELECT
						NO, ID, NAME, PHONE, EMAIL, SEX, BIRTHDAY, ADDRESS1, MEM_TYPE, PET_MEM
					FROM
						(
						SELECT
							PETSITTER.PSMEM_NO AS NO, PETSITTER.PSMEM_ID AS ID, PETSITTER.NAME AS NAME, PETSITTER.PHONE AS PHONE, PETSITTER.EMAIL AS EMAIL,
							PETSITTER.SEX AS SEX, PETSITTER.BIRTHDAY AS BIRTHDAY, PETSITTER.ADDRESS1 AS ADDRESS1, PETSITTER.MEMBER_DIVISION AS MEM_TYPE,
							PET_MEMBER.PET_MEM_NO AS PET_MEM
						FROM
							(
							SELECT
								PSMEM_NO, PSMEM_ID, NAME, PHONE, EMAIL, SEX, BIRTHDAY, ADDRESS1, MEMBER_DIVISION
							FROM
								PETSITTER
							)
						PETSITTER, PET_MEMBER
					WHERE 
						PETSITTER.PSMEM_ID = PET_MEMBER.PSMEM_ID(+)
					))
				GROUP BY NO
				ORDER BY NO DESC;
			]]>
		<include refid="common.pagingPost" />
	</select>




	<!-- 회원 상세보기 --> <!-- 일반 회원 정보, 펫시터 회원 정보, 펫시터 추가 정보 -->
	<!-- 상세보기 시 MEMBER_DIVISION의 값(일반 회원, 펫시터)에 따라 펫시터 추가 정보 VIEW가 보이거나(펫시터) 
		안 보이거나(일반 회원) 해야 함. -->
	<select id="adminMemDetail" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				NO, ID, NAME, PHONE, EMAIL, SEX, BIRTHDAY, ZIPCODE, ADDRESS1,
				ADDRESS2, ADDRESS_ADD, USE_TIME, JOIN_DATE, MEM_TYPE,
				JOB, LI_CHECK, LI_NAME, LI_FILE, LI_FILE_SIZE, SCHOOL, ZIP, ADD1,
				ADD2, ADD_ADD, CAREER, INTRODUCE, PS_CLASS
			FROM
				(
				SELECT
					MEM_NO AS NO, MEM_ID AS ID, NAME, PHONE, EMAIL, SEX,
					BIRTHDAY, ZIPCODE, ADDRESS1, ADDRESS2, ADDRESS_ADD,
					USE_TIME, JOIN_DATE, MEMBER_DIVISION AS MEM_TYPE,
					NULL AS JOB, NULL AS LI_CHECK, NULL AS LI_NAME,
					NULL AS LI_FILE, NULL AS LI_FILE_SIZE, NULL AS SCHOOL,
					NULL AS ZIP, NULL AS ADD1, NULL AS ADD2, NULL AS ADD_ADD,
					NULL AS CAREER, NULL AS INTRODUCE, NULL AS PS_CLASS
				FROM
					MEMBER	

				UNION ALL

				SELECT
					NO, ID, NAME, PHONE, EMAIL, SEX, BIRTHDAY, ZIPCODE, ADDRESS1,
					ADDRESS2, ADDRESS_ADD, USE_TIME, JOIN_DATE, MEM_TYPE,
					JOB, LI_CHECK, LI_NAME, LI_FILE, LI_FILE_SIZE, SCHOOL, ZIP, ADD1,
					ADD2, ADD_ADD, CAREER, INTRODUCE, PS_CLASS
				FROM
					(
					SELECT 
						PETSITTER.PSMEM_NO AS NO, PETSITTER.PSMEM_ID AS ID,
						PETSITTER.NAME AS NAME, PETSITTER.PHONE AS PHONE,
						PETSITTER.EMAIL AS EMAIL, PETSITTER.SEX AS SEX,
						PETSITTER.BIRTHDAY AS BIRTHDAY, PETSITTER.ZIPCODE AS ZIPCODE,
						PETSITTER.ADDRESS1 AS ADDRESS1, PETSITTER.ADDRESS2 AS ADDRESS2,
						PETSITTER.ADDRESS_ADD AS ADDRESS_ADD, PETSITTER.USE_TIME AS USE_TIME,
						PETSITTER.JOIN_DATE AS JOIN_DATE, PETSITTER.MEMBER_DIVISION AS MEM_TYPE,
						PETSITTER_ADD.PSMEM_JOB AS JOB, PETSITTER_ADD.PSMEM_LICENSE_CHECK AS LI_CHECK,
						PETSITTER_ADD.PSMEM_LICENSE_NAME AS LI_NAME,
						PETSITTER_ADD.PSMEM_LICENSE_FILE AS LI_FILE, PETSITTER_ADD.PSMEM_LICENSE_FILE_SIZE AS LI_FILE_SIZE,
						PETSITTER_ADD.PSMEM_SCHOOL_FINISH_CHECK AS SCHOOL, PETSITTER_ADD.PSMEM_CONSIGNMENT_ZIPCODE AS ZIP,
						PETSITTER_ADD.PSMEM_CONSIGNMENT_ADDRESS1 AS ADD1, PETSITTER_ADD.PSMEM_CONSIGNMENT_ADDRESS2 AS ADD2,
						PETSITTER_ADD.PSMEM_CONSIGNMENT_ADDRESS_ADD AS ADD_ADD, PETSITTER_ADD.PSMEM_CAREER AS CAREER,
						PETSITTER_ADD.PSMEM_INTRODUCE AS INTRODUCE, PETSITTER_ADD.PSMEM_CLASS AS PS_CLASS
					FROM
						(
						SELECT
							PSMEM_NO, PSMEM_ID, NAME, PHONE, EMAIL, SEX, BIRTHDAY,
							ZIPCODE, ADDRESS1, ADDRESS2, ADDRESS_ADD, USE_TIME, JOIN_DATE, MEMBER_DIVISION
						FROM
							PETSITTER
						)
						PETSITTER, PETSITTER_ADD
					WHERE
						PETSITTER.PSMEM_ID = PETSITTER_ADD.PSMEM_ID(+)
				))
			WHERE
				ID = #{ID}
		]]>
	</select>




	<!-- 회원 강제 탈퇴(삭제) -->
	<delete id="adminMemDel" parameterType="hashmap"> 
		<![CDATA[
			DELETE
			FROM
				<choose>
					<when test = "MEMBER_DIVISION == '일반 회원'">
						MEMBER
					WHERE
						MEM_ID = #{ID}
					</when>
					<when test = "MEMBER_DIVISION == '펫시터'">
						PETSITTER
					WHERE
						PSMEM_ID = #{ID}
					</when>
				</choose>
		]]>
	</delete>

</mapper>